alias: Airco - Automatic Climate System
description: ""
trigger:
  - platform: time_pattern
    minutes: /10
  - platform: state
    entity_id:
      - input_boolean.home_occupation
condition: []
action:
  - choose:
      - conditions:
          - condition: state
            entity_id: input_boolean.allow_airco_start_stop
            state: "off"
          - condition: state
            entity_id: input_boolean.home_occupation
            state: "off"
        sequence:
          - repeat:
              count: "{{ ac_off_count }}"
              sequence:
                - if:
                    - condition: numeric_state
                      entity_id: sensor.hourly_consumption_average
                      below: -700
                  then:
                    - service: script.airco_action_an_ac_with_params
                      data: |
                        {% set airco = ac_off[repeat.index-1] %} 
                          {"ac_name": "{{ airco }}", "ac_mode": "dry", "ac_temp": "20", "ac_suffix": "{{ mapping_attributes[airco][0] }}" }
                    - stop: airco starts drying
          - repeat:
              count: "{{ ac_on_count }}"
              sequence:
                - if:
                    - condition: numeric_state
                      entity_id: sensor.hourly_consumption_average
                      above: -100
                  then:
                    - service: script.airco_action_an_ac_with_params
                      data: |
                        {% set airco = ac_on_inv[repeat.index-1] %} 
                          {"ac_name": "{{ airco }}", "ac_mode": "dry", "ac_temp": "20", "ac_suffix": "{{ mapping_attributes[airco][0] }}" }
                    - stop: airco decreased to drying
          - repeat:
              count: "{{ ac_dry_count }}"
              sequence:
                - if:
                    - condition: numeric_state
                      entity_id: sensor.hourly_consumption_average
                      above: -100
                  then:
                    - service: script.airco_action_an_ac_with_params
                      data:
                        ac_name: "{{ ac_dry_inv[repeat.index-1] }}"
                        ac_mode: "off"
                    - stop: airco stopped
          - repeat:
              count: "{{ ac_dry_count }}"
              sequence:
                - if:
                    - condition: template
                      value_template: >
                        {{ (states('sensor.hourly_consumption_average') |
                        float(0) < -700) and
                           ( (states('sensor.median_indoor_tempererature') | float(0) <= 21) or
                             (states('sensor.median_indoor_tempererature') | float(0) >= 25)
                           ) }}
                  then:
                    - service: script.airco_action_an_ac_with_params
                      data: >
                        {% set airco = ac_dry[repeat.index-1] %} {% if
                        (states('sensor.median_indoor_tempererature') | float(0)
                        <= 21) %}
                          {"ac_name": "{{ airco }}", "ac_mode": "heat", "ac_temp": "{{ mapping_attributes[airco][1] | int(0) - 1 }}", "ac_suffix": "{{ mapping_attributes[airco][0] }}" }
                        {% else %}
                          {"ac_name": "{{ airco }}", "ac_mode": "cool", "ac_temp": "{{ mapping_attributes[airco][2] | int(0) + 1 }}", "ac_suffix": "{{ mapping_attributes[airco][0] }}" }
                        {% endif %}
                    - stop: airco switched from drying to heating or cooling
      - conditions:
          - condition: state
            entity_id: input_boolean.allow_airco_start_stop
            state: "off"
          - condition: state
            entity_id: input_boolean.home_occupation
            state: "on"
        sequence:
          - repeat:
              count: "{{ ac_off_count }}"
              sequence:
                - if:
                    - condition: template
                      value_template: |
                        {% set airco = ac_off[repeat.index-1] %}  {{
                            (states('input_boolean.ac_auto_'+mapping_attributes[airco][0]) == 'on') and 
                            not ( (states('sensor.average_outside_temperature') | float(0) > 19) and
                                  (states('sensor.average_outside_temperature') | float(0) < 25) and
                                  (states('sensor.hourly_consumption_average') | float(0) > -700) ) }}
                  then:
                    - service: script.airco_action_an_ac_with_params
                      data: >
                        {% set airco = ac_off[repeat.index-1] %} {% if
                        (states('sensor.average_outside_temperature') | float(0)
                        <= 19) %}
                          {"ac_name": "{{ airco }}", "ac_mode": "heat", "ac_temp": "{{ mapping_attributes[airco][1] | int(0) - 1 }}", "ac_suffix": "{{ mapping_attributes[airco][0] }}" }
                        {% elif (states('sensor.median_indoor_tempererature') |
                        float(0) >= 25) %}
                          {"ac_name": "{{ airco }}", "ac_mode": "cool", "ac_temp": "{{ mapping_attributes[airco][2] | int(0) + 1 }}", "ac_suffix": "{{ mapping_attributes[airco][0] }}" }
                        {% else %}
                          {"ac_name": "{{ airco }}", "ac_mode": "dry", "ac_temp": "20", "ac_suffix": "{{ mapping_attributes[airco][0] }}" }
                        {% endif %}
                    - stop: new airco starts
          - repeat:
              count: "{{ ac_all_on_count }}"
              sequence:
                - if:
                    - condition: template
                      value_template: |
                        {% set airco = ac_all_on[repeat.index-1] %}
                           {{ (states('input_boolean.ac_auto_'+mapping_attributes[airco][0]) == 'on') }}
                  then:
                    - choose:
                        - conditions:
                            - condition: template
                              value_template: >-
                                {{ states('sensor.average_outside_temperature')
                                | float(0) <= 19 }}
                          sequence:
                            - if:
                                - condition: template
                                  value_template: |
                                    {% set airco = ac_all_on[repeat.index-1] %} 
                                      {{ (states('sensor.hourly_consumption_average') | float(0) > -100) and
                                         ( ( (mapping_attributes[airco][0] | truncate(2,false,'') == 'sa') and
                                             ((now().hour >= 23) or (now().hour < 9)) ) or
                                           ( (mapping_attributes[airco][0] | truncate(2,false,'') == 'ch') and
                                             ((now().hour >= 9) and (now().hour < 18)) ) ) }}
                              then:
                                - if:
                                    - condition: template
                                      value_template: >-
                                        {% set airco = ac_all_on[repeat.index-1]
                                        %}
                                          {{ (states(airco) != 'heat') or
                                             (state_attr(airco, 'temperature') | float(0) != mapping_attributes[airco][1] | int(0) - 1) }}
                                  then:
                                    - service: script.airco_action_an_ac_with_params
                                      data: >
                                        {% set airco = ac_all_on[repeat.index-1]
                                        %}
                                          {"ac_name": "{{ airco }}", "ac_mode": "heat", "ac_temp": "{{ mapping_attributes[airco][1] | int(0) - 1 }}", "ac_suffix": "{{ mapping_attributes[airco][0] }}" }
                                    - stop: starting reduced heating
                                  else:
                                    - service: script.airco_action_an_ac_with_params
                                      data: >
                                        {% set airco = ac_all_on[repeat.index-1]
                                        %}
                                          {"ac_name": "{{ airco }}", "ac_mode": "heat", "ac_temp": "{{ mapping_attributes[airco][1] | int(0) - 1 }}", "ac_suffix": "{{ mapping_attributes[airco][0] }}" }
                              else:
                                - if:
                                    - condition: template
                                      value_template: >-
                                        {% set airco = ac_all_on[repeat.index-1]
                                        %}
                                          {{ (states(airco) != 'heat') or
                                             (state_attr(airco, 'temperature') | float(0) != mapping_attributes[airco][1]) }}
                                  then:
                                    - service: script.airco_action_an_ac_with_params
                                      data: >
                                        {% set airco = ac_all_on[repeat.index-1]
                                        %}
                                          {"ac_name": "{{ airco }}", "ac_mode": "heat", "ac_temp": "{{ mapping_attributes[airco][1] }}", "ac_suffix": "{{ mapping_attributes[airco][0] }}" }
                                    - stop: starting normal heating
                                  else:
                                    - service: script.airco_action_an_ac_with_params
                                      data: >
                                        {% set airco = ac_all_on[repeat.index-1]
                                        %}
                                          {"ac_name": "{{ airco }}", "ac_mode": "heat", "ac_temp": "{{ mapping_attributes[airco][1] }}", "ac_suffix": "{{ mapping_attributes[airco][0] }}" }
                        - conditions:
                            - condition: template
                              value_template: |-
                                {{
                                   (states('sensor.average_outside_temperature') | float(0) > 19) and
                                   (states('sensor.average_outside_temperature') | float(0) < 25)
                                }}
                          sequence:
                            - if:
                                - condition: template
                                  value_template: >-
                                    {{
                                    states('sensor.hourly_consumption_average')
                                    | float(0) > -100 }}
                              then:
                                - service: script.airco_action_an_ac_with_params
                                  data: >
                                    {% set airco = ac_all_on[repeat.index-1]
                                    %}  
                                      {"ac_name": "{{ airco }}", "ac_mode": "off" }
                                - stop: airco stopped
                              else:
                                - if:
                                    - condition: template
                                      value_template: >-
                                        {{ (states(ac_all_on[repeat.index-1]) !=
                                        'dry') }}
                                  then:
                                    - service: script.airco_action_an_ac_with_params
                                      data: >
                                        {% set airco = ac_all_on[repeat.index-1]
                                        %}
                                          {"ac_name": "{{ airco }}", "ac_mode": "dry", "ac_temp": "20", "ac_suffix": "{{ mapping_attributes[airco][0] }}" }
                                    - stop: start drying
                                  else:
                                    - service: script.airco_action_an_ac_with_params
                                      data: >
                                        {% set airco = ac_all_on[repeat.index-1]
                                        %}
                                          {"ac_name": "{{ airco }}", "ac_mode": "dry", "ac_temp": "20", "ac_suffix": "{{ mapping_attributes[airco][0] }}" }
                    - choose:
                        - conditions:
                            - condition: template
                              value_template: >-
                                {{ states('sensor.average_outside_temperature')
                                | float(0) >= 25 }}
                          sequence:
                            - if:
                                - condition: template
                                  value_template: |
                                    {% set airco = ac_all_on[repeat.index-1] %} 
                                      {{ (states('sensor.hourly_consumption_average') | float(0) > -100) and
                                         ( ( (mapping_attributes[airco][0] | truncate(2,false,'') == 'sa') and
                                             ((now().hour >= 23) or (now().hour < 9)) ) or
                                           ( (mapping_attributes[airco][0] | truncate(2,false,'') == 'ch') and
                                             ((now().hour >= 9) and (now().hour < 18)) ) ) }}
                              then:
                                - if:
                                    - condition: template
                                      value_template: >-
                                        {{ (states(ac_all_on[repeat.index-1]) !=
                                        'cool') }}
                                  then:
                                    - service: script.airco_action_an_ac_with_params
                                      data: >
                                        {% set airco = ac_all_on[repeat.index-1]
                                        %}
                                          {"ac_name": "{{ airco }}", "ac_mode": "cool", "ac_temp": "{{ mapping_attributes[airco][2] | int(0) + 2 }}", "ac_suffix": "{{ mapping_attributes[airco][0] }}" }
                                    - stop: starting reduced heating
                                  else:
                                    - service: script.airco_action_an_ac_with_params
                                      data: >
                                        {% set airco = ac_all_on[repeat.index-1]
                                        %}
                                          {"ac_name": "{{ airco }}", "ac_mode": "cool", "ac_temp": "{{ mapping_attributes[airco][2] | int(0) + 2 }}", "ac_suffix": "{{ mapping_attributes[airco][0] }}" }
                              else:
                                - if:
                                    - condition: template
                                      value_template: >-
                                        {{ (states(ac_all_on[repeat.index-1]) !=
                                        'cool') }}
                                  then:
                                    - service: script.airco_action_an_ac_with_params
                                      data: >
                                        {% set airco = ac_all_on[repeat.index-1]
                                        %} {% if
                                        (states('sensor.hourly_consumption_average')
                                        | float(0) <= -100) %}
                                          {"ac_name": "{{ airco }}", "ac_mode": "cool", "ac_temp": "{{ mapping_attributes[airco][2] | int(0) - 1 }}", "ac_suffix": "{{ mapping_attributes[airco][0] }}" }
                                        {% else %}
                                          {"ac_name": "{{ airco }}", "ac_mode": "cool", "ac_temp": "{{ mapping_attributes[airco][2] }}", "ac_suffix": "{{ mapping_attributes[airco][0] }}" }
                                        {% endif %}
                                    - stop: starting normal or increased cooling
                                  else:
                                    - service: script.airco_action_an_ac_with_params
                                      data: >
                                        {% set airco = ac_all_on[repeat.index-1]
                                        %} {% if
                                        (states('sensor.hourly_consumption_average')
                                        | float(0) <= -100) %}
                                          {"ac_name": "{{ airco }}", "ac_mode": "cool", "ac_temp": "{{ mapping_attributes[airco][2] | int(0) - 1 }}", "ac_suffix": "{{ mapping_attributes[airco][0] }}" }
                                        {% else %}
                                          {"ac_name": "{{ airco }}", "ac_mode": "cool", "ac_temp": "{{ mapping_attributes[airco][2] }}", "ac_suffix": "{{ mapping_attributes[airco][0] }}" }
                                        {% endif %}
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.allow_airco_start_stop
mode: single
variables:
  ac_off: >
    {{ expand(area_entities('Clims')) | selectattr('state','in', ['off']) |
    sort(attribute='entity_id') | map(attribute='entity_id') | list }}
  ac_off_count: >
    {{ expand(area_entities('Clims')) | selectattr('state','in', ['off']) | list
    | count }}
  ac_all_on: >
    {{ expand(area_entities('Clims')) | rejectattr('state','in', ['unknown',
    'unavailable', 'off']) | sort(attribute='entity_id', reverse=true) |
    map(attribute='entity_id') | list }}
  ac_all_on_count: >
    {{ expand(area_entities('Clims')) | rejectattr('state','in', ['unknown',
    'unavailable', 'off']) | list | count }}
  ac_on_inv: >
    {{ expand(area_entities('Clims')) | rejectattr('state','in', ['unknown',
    'unavailable', 'off', 'dry']) | sort(attribute='entity_id', reverse=true) |
    map(attribute='entity_id') | list }}
  ac_on_count: >
    {{ expand(area_entities('Clims')) | rejectattr('state','in', ['unknown',
    'unavailable', 'off', 'dry']) | list | count }}
  ac_dry: >
    {{ expand(area_entities('Clims')) | selectattr('state','in', ['dry']) |
    sort(attribute='entity_id') | map(attribute='entity_id') | list }}
  ac_dry_inv: >
    {{ expand(area_entities('Clims')) | selectattr('state','in', ['dry']) |
    sort(attribute='entity_id', reverse=true) | map(attribute='entity_id') |
    list }}
  ac_dry_count: >
    {{ expand(area_entities('Clims')) | selectattr('state','in', ['dry']) | list
    | count }}
  mapping_attributes:
    climate.ac_1_chambre_haut_fond:
      - ch_haut_fond
      - 17
      - 24
    climate.ac_2_chambre_bas_fond:
      - ch_bas_fond
      - 17
      - 25
    climate.ac_3_chambre_haut_avant:
      - ch_haut_avant
      - 17
      - 25
    climate.ac_4_chambre_bas_avant:
      - ch_bas_avant
      - 17
      - 25
    climate.ac_5_salon_bas:
      - salon_bas
      - 17
      - 25
    climate.ac_6_salon_haut:
      - salon_haut
      - 19
      - 24
